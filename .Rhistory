ggplot(init_points) +
geom_point(aes(x, y, color = z))
ggplot(init_points) +
geom_point(aes(x, y, color = z))+
geom_point(aes(x, y), shape = 1, size = 5, fill = "transparent")
ex.vgm <- variogram(z~1, data = init_points, locations = ~x + y)
plot(ex.vgm)
d101 <- c(100, 94.5, 95.6, 100, 100, 92.3, 100, 80, 96.7, 86.7, 100, 100, 100, 85.6)
d102 <- c(91.11, 95.56, 106.67, 100, 88.89, 91.11, 97.78, 106.67, 100, 100, 100, 100, 91.11)
d103 <- c(89.44, 101.67, 93.33, 87.78, 91.11, 85.56, 82.78, 103.33, 68.67, 67.78, 91.11, 89.44)
d104 <- c(96.67, 66.67, 101.11, 97.78, 94.44, 94.44, 106.67, 78.89, 86.11, 98.89, 90.56, 93.33)
d105 <- c(86.67, 106.67)
d106 <- c(85.6, 95.5, 92.8, 82.2, 98.8, 100, 94.4, 96.7, 95.5, 71.1, 76.7, 84.4, 93.4, 84.5, 93.4)
s101 <- c(100, NA, 100, 100, 90, 86.7, 94.4, 94.4, 100, 84.5, 94.5, 76.7, 75.6)
s102 <- c(104.44, 66.67, 80, 97.78, 91.11, 100, 100, 86.67)
s103 <- c(85, 96.11, 92.22, 67.77, 96.1, 66.67, 78.33, 92.22, 64.99, 99.44, 99.44, 99.44, 93.89, 96.11)
s104 <- c(102.22, 106.67, 93.33, 102.22, 93.33, 97.78, 73.33, 95.56, 102.22, NA, 84.44, 62.22)
s105 <- c(93.33, 88.89, 86.67, 91.11, 88.89, 84.44, 106.67)
s106 <- c(92.2, 93.4, 71.1, 94.4, 91.1, 77.8, 88/9, 100, 100, 84.5, 87.8, 93.4)
full_class <- c(d101, d102, d103, d104, d105, d106, s101, s102, s103, s104, s105, s106)
full_class
hist(full_class)
summary(full_class)
ethan <- c(d102, s102, d105, s105, s104)
ethan <- c(d102, s102, d105, s105, s104)
skyler <- c(d101, s101, d106, s106)
sarah <- c(d103, s103, s104)
hist(ethan)
hist(skyler)
hist(sarah)
summary(ethan)
summary(skyler)
summary(sarah)
full_class <- c(d101, d102, d103, d104, d105, d106, s101, s102, s103, s104, s105, s106)
hist(full_class)
summary(full_class)
ethan <- c(d102, s102, d105, s105, s104)
skyler <- c(d101, s101, d106, s106)
sarah <- c(d103, s103, s104)
hist(ethan)
hist(skyler)
hist(sarah)
summary(ethan)
summary(skyler)
summary(sarah)
d101 <- c(100, 94.5, 95.6, 100, 100, 92.3, 100, 80, 96.7, 86.7, 100, 100, 100, 85.6)
d102 <- c(91.11, 95.56, 106.67, 100, 88.89, 91.11, 97.78, 106.67, 100, 100, 100, 100, 91.11)
d103 <- c(89.44, 101.67, 93.33, 87.78, 91.11, 85.56, 82.78, 103.33, 68.67, 67.78, 91.11, 89.44)
d104 <- c(96.67, 66.67, 101.11, 97.78, 94.44, 94.44, 106.67, 78.89, 86.11, 98.89, 90.56, 93.33)
d105 <- c(86.67, 106.67)
d106 <- c(85.6, 95.5, 92.8, 82.2, 98.8, 100, 94.4, 96.7, 95.5, 71.1, 76.7, 84.4, 93.4, 84.5, 93.4)
s101 <- c(100, NA, 100, 100, 90, 86.7, 94.4, 94.4, 100, 84.5, 94.5, 76.7, 75.6)
s102 <- c(104.44, 66.67, 80, 97.78, 91.11, 100, 100, 86.67)
s103 <- c(85, 96.11, 92.22, 67.77, 96.1, 66.67, 78.33, 92.22, 64.99, 99.44, 99.44, 99.44, 93.89, 96.11)
s104 <- c(102.22, 106.67, 93.33, 102.22, 93.33, 97.78, 73.33, 95.56, 102.22, NA, 84.44, 62.22)
s105 <- c(93.33, 88.89, 86.67, 91.11, 88.89, 84.44, 106.67)
s106 <- c(92.2, 93.4, 71.1, 94.4, 91.1, 77.8, 88.9, 100, 100, 84.5, 87.8, 93.4)
full_class <- c(d101, d102, d103, d104, d105, d106, s101, s102, s103, s104, s105, s106)
hist(full_class)
summary(full_class)
ethan <- c(d102, s102, d105, s105, s104)
skyler <- c(d101, s101, d106, s106)
sarah <- c(d103, s103, s104)
hist(ethan)
hist(skyler)
hist(sarah)
summary(ethan)
summary(skyler)
summary(sarah)
t.test(ethan, skyler)
t.test(ethan, sarah)
t.test(sarah, skyler)
ethan <- c(d102, s102, d105, s105, s104)
skyler <- c(d101, s101, d106, s106)
sarah <- c(d103, s103, d104)
hist(ethan)
hist(skyler)
hist(sarah)
summary(ethan)
summary(skyler)
summary(sarah)
summary(full_class)
##### Load data #####
library(tidyverse)
library(magrittr)
setwd("~/Google\ Drive/Graduate\ School/Shift/")
m.sim <- readxl::read_excel("men-sim-file.xls", col_names = F) %>%
rename(age = "..1", v = "..2") %>%
mutate(n = 1)
f.sim <- readxl::read_excel("women-sim-file.xls", col_names = F) %>%
rename(age = "..1", v = "..2") %>%
mutate(n = 1)
m.sim
f.sim
ggplot() +
geom_line(data = m.sim, aes(x = age, y = v), color = "blue") +
geom_line(data = f.sim, aes(x = age, y = v), color = "red")
mu_m <- weighted.mean(m.sim$age, m.sim$v)
mu_f <- weighted.mean(f.sim$age, f.sim$v)
ALPHA <- min(min(m.sim$age), min(f.sim$age))
BETA <- max(max(m.sim$age), max(f.sim$age))
DELTA <- round(mu_f - mu_m)
f_mu.hat <- function(alpha, beta, delta, df) {
df %>%
filter(age > alpha & age < beta) %>%
mutate(av = age * v * n ) %>%
select(av) %>%
sum() %>%
# divide_by(df %>% select(n) %>% sum()) %>%
return()
}
mu.hat_w <- f_mu.hat(alpha = ALPHA+DELTA, beta = BETA, delta = DELTA, df = f.sim)
mu.hat_m <- f_mu.hat(alpha = ALPHA, beta = BETA-DELTA, delta = DELTA, df = m.sim)
# Quick sanity check:
ggplot() +
geom_line(data = m.sim, aes(x = age, y = v), color = "blue") +
geom_line(data = f.sim, aes(x = age, y = v), color = "red")  +
geom_vline(xintercept = ALPHA + DELTA) +
geom_vline(xintercept = BETA - DELTA) +
geom_vline(xintercept = mu_m, color = "blue") +
geom_vline(xintercept = mu_f, color = "red")
#### sigma.hat.sq ####
f_sigma.hat.sq <- function(alpha, beta, delta, df, mu.hat) {
df %>%
filter(age > alpha, age < beta) %>%
mutate(a.mu = age - mu.hat) %>%
mutate(r = a.mu^2 * v * n) %>%
select(r) %>%
sum() %>%
return()
}
sigma.hat.sq_w <- f_sigma.hat.sq(alpha = ALPHA + DELTA,
beta = BETA,
delta = DELTA,
df = f.sim,
mu.hat = mu.hat_w)
sigma.hat.sq_m <- f_sigma.hat.sq(alpha = ALPHA,
beta = BETA - DELTA,
delta = DELTA,
df = m.sim,
mu.hat = mu.hat_m)
#### Q and Q.tilde ####
f_Q <- function(alpha, beta, df) {
df %>%
filter(age > alpha, age < beta) %>%
mutate(r = v*n) %>%
sum()
}
Q <- f_Q(alpha = ALPHA + DELTA,
beta = BETA,
df = f.sim)
Q.tilde <- f_Q(alpha = ALPHA,
beta = BETA - DELTA,
df = m.sim)
R <- mu.hat_w + DELTA
R.tilde <- mu.hat_m - DELTA
#### N and N.tilde ####
f_N <- function(alpha, beta, R, sigma.hat.sq_m, Q,
Q.tilde, df, mu.hat_m, mu.hat_w, delta ){
a1 <- ((beta - R)^2 - sigma.hat.sq_m/Q.tilde) * (df %>% filter(age == beta) %>% pull("v"))
a2 <- ((alpha - mu.hat_m)^2 - sigma.hat.sq_m/Q.tilde) * (df %>% filter(age == alpha + delta) %>% pull("v"))
a3 <- -2*mu.hat_w + 2*R*Q
return(a1-a2+a3)
}
N <- f_N(ALPHA, BETA, R, sigma.hat.sq_m, Q,
Q.tilde, f.sim,mu.hat_m, mu.hat_w, DELTA)
f_N.tilde <- function(alpha, beta, R.tilde, sigma.hat.sq_w,
Q, Q.tilde, df, mu.hat_m, mu.hat_w, delta ){
a1 <- ((beta - mu.hat_w)^2 - sigma.hat.sq_w/Q) *(df %>% filter(age == beta - delta) %>% pull("v"))
a2 <- ((alpha - R.tilde)^2 - sigma.hat.sq_w/Q)* (df %>% filter(age == alpha) %>% pull("v"))
a3 <- -2*mu.hat_m + 2*R.tilde*Q.tilde
return(a1 - a2 + a3)
}
N.tilde <- f_N.tilde(ALPHA, BETA, R.tilde, sigma.hat.sq_w,
Q, Q.tilde, m.sim, mu.hat_m, mu.hat_w, DELTA)
#### D and D.tilde ####
# Need to calc v' (vp; v prime)
f.sim$vp <- 0
m.sim$vp <- 0
for (i in 1:nrow(f.sim)){
vp <- (f.sim[i+1, "v"] - f.sim[i, "v"] ) %>% pull()
n <- (f.sim[i, "n"]) %>% pull
f.sim[i, "vp"] <- vp/n
}
f.sim[nrow(f.sim), "vp"] <- 0
for (i in 1:nrow(m.sim)){
vp <- (m.sim[i+1, "v"] - m.sim[i, "v"] ) %>% pull()
n <- (m.sim[i, "n"]) %>% pull
m.sim[i, "vp"] <- vp/n
}
m.sim[nrow(m.sim), "vp"] <- 0
f_D <- function(beta, R, sigma.hat.sq_m, Q.tilde,
df, alpha, mu.hat_m, delta, Q){
a1 <- ((beta - R)^2 - sigma.hat.sq_m/Q.tilde) * (df %>% filter(age == beta) %>% pull("vp"))
a2 <- ((alpha - mu.hat_m)^2 - sigma.hat.sq_m/Q.tilde) * (df %>% filter(age == alpha + delta) %>% pull("vp"))
a3 <- 2*(beta - R)*(df %>% filter(age == beta) %>% pull("v"))
a4 <- 2*(alpha - mu.hat_m)*(df %>% filter(age == alpha + delta) %>% pull("v")) + 2*Q
return(a1 - a2 - a3 + a4)
}
D <- f_D(BETA, R, sigma.hat.sq_m, Q.tilde, m.sim, ALPHA, mu.hat_m, DELTA, Q)
f_D.tilde <- function(beta, mu.hat_w, sigma.hat.sq_w, Q, df, alpha, R.tilde, Q.tilde, delta) {
a1 <- ((beta - mu.hat_w)^2 - sigma.hat.sq_w/Q) * (df %>% filter(age == beta - delta) %>% pull("vp"))
a2 <- ((alpha - R.tilde)^2 - sigma.hat.sq_w/Q) * (df %>% filter(age == alpha) %>% pull("vp"))
a3 <- 2 * (beta - mu.hat_w) * (df %>% filter(age == beta - delta) %>% pull("v"))
a4 <- 2*(alpha - R.tilde) * (df %>% filter(age == alpha) %>% pull("v")) + 2*Q.tilde
return(a1 - a2 - a3 + a4)
}
D.tilde <- f_D.tilde(BETA, mu.hat_w, sigma.hat.sq_w, Q, m.sim, ALPHA, R.tilde, Q.tilde, DELTA)
#### The Formulae  ####
#### Estimator 1 ####
f_e1 <- function(delta = DELTA, N = N, D = D, sigma.hat.sq_w = sigma.hat.sq_w,
sigma.hat.sq_m = sigma.hat.sq_m, mu.hat_w = mu.hat_w, Q = Q,
Q.tilde = Q.tilde, R = R) {
a1 <- delta - N/D
print(a1)
a2 <- N^2 - 2*D*(sigma.hat.sq_w + 2*mu.hat_w^2 - Q*mu.hat_w^2 - 2*R*mu.hat_w + Q*R^2 -  Q/Q.tilde*sigma.hat.sq_m)
print(a2)
return(a1 - (sqrt(a2)/D))
}
e1 <- f_e1(delta = DELTA, N = N, D = D, sigma.hat.sq_w = sigma.hat.sq_w,
sigma.hat.sq_m = sigma.hat.sq_m, mu.hat_w = mu.hat_w, Q = Q,
Q.tilde = Q.tilde, R = R)
#### sigma.hat.sq ####
f_sigma.hat.sq <- function(alpha, beta, delta, df, mu.hat) {
df %>%
filter(age > alpha, age < beta) %>%
mutate(a.mu = age) %>%
mutate(r = a.mu^2 * v * n) %>%
select(r) %>%
sum() %>%
return()
}
sigma.hat.sq_w <- f_sigma.hat.sq(alpha = ALPHA + DELTA,
beta = BETA,
delta = DELTA,
df = f.sim,
mu.hat = mu.hat_w)
sigma.hat.sq_m <- f_sigma.hat.sq(alpha = ALPHA,
beta = BETA - DELTA,
delta = DELTA,
df = m.sim,
mu.hat = mu.hat_m)
#### sigma.hat.sq ####
f_sigma.hat.sq <- function(alpha, beta, delta, df, mu.hat) {
df %>%
filter(age > alpha, age < beta) %>%
#mutate(a.mu = age - mu.hat) %>% # CHECK THIS
mutate(a.mu = age) %>%
mutate(r = a.mu^2 * v * n) %>%
select(r) %>%
sum() %>%
return()
}
sigma.hat.sq_w <- f_sigma.hat.sq(alpha = ALPHA + DELTA,
beta = BETA,
delta = DELTA,
df = f.sim,
mu.hat = mu.hat_w)
sigma.hat.sq_m <- f_sigma.hat.sq(alpha = ALPHA,
beta = BETA - DELTA,
delta = DELTA,
df = m.sim,
mu.hat = mu.hat_m)
#### Q and Q.tilde ####
f_Q <- function(alpha, beta, df) {
df %>%
filter(age > alpha, age < beta) %>%
mutate(r = v*n) %>%
sum()
}
Q <- f_Q(alpha = ALPHA + DELTA,
beta = BETA,
df = f.sim)
Q.tilde <- f_Q(alpha = ALPHA,
beta = BETA - DELTA,
df = m.sim)
R <- mu.hat_w + DELTA
R.tilde <- mu.hat_m - DELTA
#### N and N.tilde ####
f_N <- function(alpha, beta, R, sigma.hat.sq_m, Q,
Q.tilde, df, mu.hat_m, mu.hat_w, delta ){
a1 <- ((beta - R)^2 - sigma.hat.sq_m/Q.tilde) * (df %>% filter(age == beta) %>% pull("v"))
a2 <- ((alpha - mu.hat_m)^2 - sigma.hat.sq_m/Q.tilde) * (df %>% filter(age == alpha + delta) %>% pull("v"))
a3 <- -2*mu.hat_w + 2*R*Q
return(a1-a2+a3)
}
N <- f_N(ALPHA, BETA, R, sigma.hat.sq_m, Q,
Q.tilde, f.sim,mu.hat_m, mu.hat_w, DELTA)
f_N.tilde <- function(alpha, beta, R.tilde, sigma.hat.sq_w,
Q, Q.tilde, df, mu.hat_m, mu.hat_w, delta ){
a1 <- ((beta - mu.hat_w)^2 - sigma.hat.sq_w/Q) *(df %>% filter(age == beta - delta) %>% pull("v"))
a2 <- ((alpha - R.tilde)^2 - sigma.hat.sq_w/Q)* (df %>% filter(age == alpha) %>% pull("v"))
a3 <- -2*mu.hat_m + 2*R.tilde*Q.tilde
return(a1 - a2 + a3)
}
N.tilde <- f_N.tilde(ALPHA, BETA, R.tilde, sigma.hat.sq_w,
Q, Q.tilde, m.sim, mu.hat_m, mu.hat_w, DELTA)
a2 <- ((alpha - mu.hat_m)^2 - sigma.hat.sq_m/Q.tilde) * (df %>% filter(age == alpha + delta) %>% pull("v"))
a3 <- -2*mu.hat_w + 2*R*Q
return(a1-a2+a3)
#### N and N.tilde ####
f_N <- function(alpha, beta, R, sigma.hat.sq_m, Q,
Q.tilde, df, mu.hat_m, mu.hat_w, delta ){
a1 <- ((beta - R)^2 - sigma.hat.sq_m/Q.tilde) * (df %>% filter(age == beta) %>% pull("v"))
a2 <- ((alpha - mu.hat_m)^2 - sigma.hat.sq_m/Q.tilde) * (df %>% filter(age == alpha + delta) %>% pull("v"))
a3 <- -2*mu.hat_w + 2*R*Q
return(a1-a2+a3)
}
N <- f_N(ALPHA, BETA, R, sigma.hat.sq_m, Q,
Q.tilde, f.sim,mu.hat_m, mu.hat_w, DELTA)
f_N.tilde <- function(alpha, beta, R.tilde, sigma.hat.sq_w,
Q, Q.tilde, df, mu.hat_m, mu.hat_w, delta ){
a1 <- ((beta - mu.hat_w)^2 - sigma.hat.sq_w/Q) *(df %>% filter(age == beta - delta) %>% pull("v"))
a2 <- ((alpha - R.tilde)^2 - sigma.hat.sq_w/Q)* (df %>% filter(age == alpha) %>% pull("v"))
a3 <- -2*mu.hat_m + 2*R.tilde*Q.tilde
return(a1 - a2 + a3)
}
#### N and N.tilde ####
f_N <- function(alpha, beta, R, sigma.hat.sq_m, Q,
Q.tilde, df, mu.hat_m, mu.hat_w, delta ){
a1 <- ((beta - R)^2 - sigma.hat.sq_m/Q.tilde) * (df %>% filter(age == beta) %>% pull("v"))
a2 <- ((alpha - mu.hat_m)^2 - sigma.hat.sq_m/Q.tilde) * (df %>% filter(age == alpha + delta) %>% pull("v"))
a3 <- -2*mu.hat_w + 2*R*Q
return(a1-a2+a3)
}
N <- f_N(ALPHA, BETA, R, sigma.hat.sq_m, Q,
Q.tilde, f.sim,mu.hat_m, mu.hat_w, DELTA)
f_N.tilde <- function(alpha, beta, R.tilde, sigma.hat.sq_w,
Q, Q.tilde, df, mu.hat_m, mu.hat_w, delta ){
a1 <- ((beta - mu.hat_w)^2 - sigma.hat.sq_w/Q) *(df %>% filter(age == beta - delta) %>% pull("v"))
a2 <- ((alpha - R.tilde)^2 - sigma.hat.sq_w/Q)* (df %>% filter(age == alpha) %>% pull("v"))
a3 <- -2*mu.hat_m + 2*R.tilde*Q.tilde
return(a1 - a2 + a3)
}
N.tilde <- f_N.tilde(ALPHA, BETA, R.tilde, sigma.hat.sq_w,
Q, Q.tilde, m.sim, mu.hat_m, mu.hat_w, DELTA)
#### D and D.tilde ####
# Need to calc v' (vp; v prime)
f.sim$vp <- 0
m.sim$vp <- 0
for (i in 1:nrow(f.sim)){
vp <- (f.sim[i+1, "v"] - f.sim[i, "v"] ) %>% pull()
n <- (f.sim[i, "n"]) %>% pull
f.sim[i, "vp"] <- vp/n
}
f.sim[nrow(f.sim), "vp"] <- 0
for (i in 1:nrow(m.sim)){
vp <- (m.sim[i+1, "v"] - m.sim[i, "v"] ) %>% pull()
n <- (m.sim[i, "n"]) %>% pull
m.sim[i, "vp"] <- vp/n
}
m.sim[nrow(m.sim), "vp"] <- 0
f_D <- function(beta, R, sigma.hat.sq_m, Q.tilde,
df, alpha, mu.hat_m, delta, Q){
a1 <- ((beta - R)^2 - sigma.hat.sq_m/Q.tilde) * (df %>% filter(age == beta) %>% pull("vp"))
a2 <- ((alpha - mu.hat_m)^2 - sigma.hat.sq_m/Q.tilde) * (df %>% filter(age == alpha + delta) %>% pull("vp"))
a3 <- 2*(beta - R)*(df %>% filter(age == beta) %>% pull("v"))
a4 <- 2*(alpha - mu.hat_m)*(df %>% filter(age == alpha + delta) %>% pull("v")) + 2*Q
return(a1 - a2 - a3 + a4)
}
D <- f_D(BETA, R, sigma.hat.sq_m, Q.tilde, m.sim, ALPHA, mu.hat_m, DELTA, Q)
f_D.tilde <- function(beta, mu.hat_w, sigma.hat.sq_w, Q, df, alpha, R.tilde, Q.tilde, delta) {
a1 <- ((beta - mu.hat_w)^2 - sigma.hat.sq_w/Q) * (df %>% filter(age == beta - delta) %>% pull("vp"))
a2 <- ((alpha - R.tilde)^2 - sigma.hat.sq_w/Q) * (df %>% filter(age == alpha) %>% pull("vp"))
a3 <- 2 * (beta - mu.hat_w) * (df %>% filter(age == beta - delta) %>% pull("v"))
a4 <- 2*(alpha - R.tilde) * (df %>% filter(age == alpha) %>% pull("v")) + 2*Q.tilde
return(a1 - a2 - a3 + a4)
}
D.tilde <- f_D.tilde(BETA, mu.hat_w, sigma.hat.sq_w, Q, m.sim, ALPHA, R.tilde, Q.tilde, DELTA)
#### The Formulae  ####
#### Estimator 1 ####
f_e1 <- function(delta = DELTA, N = N, D = D, sigma.hat.sq_w = sigma.hat.sq_w,
sigma.hat.sq_m = sigma.hat.sq_m, mu.hat_w = mu.hat_w, Q = Q,
Q.tilde = Q.tilde, R = R) {
a1 <- delta - N/D
print(a1)
a2 <- N^2 - 2*D*(sigma.hat.sq_w + 2*mu.hat_w^2 - Q*mu.hat_w^2 - 2*R*mu.hat_w + Q*R^2 -  Q/Q.tilde*sigma.hat.sq_m)
print(a2)
return(a1 - (sqrt(a2)/D))
}
e1 <- f_e1(delta = DELTA, N = N, D = D, sigma.hat.sq_w = sigma.hat.sq_w,
sigma.hat.sq_m = sigma.hat.sq_m, mu.hat_w = mu.hat_w, Q = Q,
Q.tilde = Q.tilde, R = R)
f_mu.hat <- function(alpha, beta, delta, df) {
df %>%
filter(age > alpha & age < beta) %>%
mutate(av = age * v * n ) %>%
select(av) %>%
sum() %>%
divide_by(df %>% select(n) %>% sum()) %>%
return()
}
mu.hat_w <- f_mu.hat(alpha = ALPHA+DELTA, beta = BETA, delta = DELTA, df = f.sim)
mu.hat_m <- f_mu.hat(alpha = ALPHA, beta = BETA-DELTA, delta = DELTA, df = m.sim)
#### sigma.hat.sq ####
f_sigma.hat.sq <- function(alpha, beta, delta, df, mu.hat) {
df %>%
filter(age > alpha, age < beta) %>%
#mutate(a.mu = age - mu.hat) %>% # CHECK THIS
mutate(a.mu = age) %>%
mutate(r = a.mu^2 * v * n) %>%
select(r) %>%
sum() %>%
return()
}
sigma.hat.sq_w <- f_sigma.hat.sq(alpha = ALPHA + DELTA,
beta = BETA,
delta = DELTA,
df = f.sim,
mu.hat = mu.hat_w)
sigma.hat.sq_m <- f_sigma.hat.sq(alpha = ALPHA,
beta = BETA - DELTA,
delta = DELTA,
df = m.sim,
mu.hat = mu.hat_m)
mu.hat_w <- f_mu.hat(alpha = ALPHA+DELTA, beta = BETA, delta = DELTA, df = f.sim)
mu.hat_m <- f_mu.hat(alpha = ALPHA, beta = BETA-DELTA, delta = DELTA, df = m.sim)
#### sigma.hat.sq ####
f_sigma.hat.sq <- function(alpha, beta, delta, df, mu.hat) {
df %>%
filter(age > alpha, age < beta) %>%
mutate(a.mu = age - mu.hat) %>% # CHECK THIS
mutate(a.mu = age) %>%
mutate(r = a.mu^2 * v * n) %>%
select(r) %>%
sum() %>%
return()
}
#### sigma.hat.sq ####
f_sigma.hat.sq <- function(alpha, beta, delta, df, mu.hat) {
df %>%
filter(age > alpha, age < beta) %>%
mutate(a.mu = age - mu.hat) %>% # CHECK THIS
#mutate(a.mu = age) %>%
mutate(r = a.mu^2 * v * n) %>%
select(r) %>%
sum() %>%
return()
}
sigma.hat.sq_w <- f_sigma.hat.sq(alpha = ALPHA + DELTA,
beta = BETA,
delta = DELTA,
df = f.sim,
mu.hat = mu.hat_w)
sigma.hat.sq_m <- f_sigma.hat.sq(alpha = ALPHA,
beta = BETA - DELTA,
delta = DELTA,
df = m.sim,
mu.hat = mu.hat_m)
# Quick sanity check:
ggplot() +
geom_line(data = m.sim, aes(x = age, y = v), color = "blue") +
geom_line(data = f.sim, aes(x = age, y = v), color = "red")  +
geom_vline(xintercept = ALPHA + DELTA) +
geom_vline(xintercept = BETA - DELTA) +
geom_vline(xintercept = mu_m, color = "blue") +
geom_vline(xintercept = mu_f, color = "red")
mu_f/mu.hat)f
mu_f/mu.hat_f
mu_f/mu.hat_w
mu_m/mu.hat_m
f_mu.hat <- function(alpha, beta, delta, df) {
df %>%
filter(age > alpha & age < beta) %>%
mutate(av = age * v * n ) %>%
select(av) %>%
sum() %>%
#divide_by(df %>% select(n) %>% sum()) %>%
return()
}
mu.hat_w <- f_mu.hat(alpha = ALPHA+DELTA, beta = BETA, delta = DELTA, df = f.sim)
mu.hat_m <- f_mu.hat(alpha = ALPHA, beta = BETA-DELTA, delta = DELTA, df = m.sim)
f_mu.hat <- function(alpha, beta, delta, df) {
df %>%
filter(age > alpha & age < beta) %>%
mutate(av = age * v * n ) %>%
select(av) %>%
sum() %>%
# divide_by(df %>% select(n) %>% sum()) %>%
return()
}
mu.hat_w <- f_mu.hat(alpha = ALPHA+DELTA, beta = BETA, delta = DELTA, df = f.sim)
mu.hat_m <- f_mu.hat(alpha = ALPHA, beta = BETA-DELTA, delta = DELTA, df = m.sim)
# Quick sanity check:
ggplot() +
geom_line(data = m.sim, aes(x = age, y = v), color = "blue") +
geom_line(data = f.sim, aes(x = age, y = v), color = "red")  +
geom_vline(xintercept = ALPHA + DELTA) +
geom_vline(xintercept = BETA - DELTA) +
geom_vline(xintercept = mu_m, color = "blue") +
geom_vline(xintercept = mu_f, color = "red")
#### sigma.hat.sq ####
f_sigma.hat.sq <- function(alpha, beta, delta, df, mu.hat) {
df %>%
filter(age > alpha, age < beta) %>%
#mutate(a.mu = age - mu.hat) %>% # CHECK THIS
mutate(a.mu = age) %>%
mutate(r = a.mu^2 * v * n) %>%
select(r) %>%
sum() %>%
return()
}
sigma.hat.sq_w <- f_sigma.hat.sq(alpha = ALPHA + DELTA,
beta = BETA,
delta = DELTA,
df = f.sim,
mu.hat = mu.hat_w)
sigma.hat.sq_m <- f_sigma.hat.sq(alpha = ALPHA,
beta = BETA - DELTA,
delta = DELTA,
df = m.sim,
mu.hat = mu.hat_m)
